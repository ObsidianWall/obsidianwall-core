
# File: obsidianwall-core/.github/workflows/validate-modules.yml

# üß± Description: GitHub Action to validate Terraform module directory structure
# Ensures all module folders follow consistent structure:
# - Contains required files like main.tf, variables.tf
# - No extraneous or misnamed directories



name: Validate Terraform Modules

# üõ°Ô∏è Permissions: Define what the job can access
permissions:
  contents: read               # required for actions/checkout
  pull-requests: write         # only if writing comments to PRs
  # id-token: write            # uncomment for OIDC auth (e.g., cloud deployments)
  # packages: read             # needed if pulling from GHCR or private packages
  # issues: write              # for workflows that comment on issues
  # actions: read              # for composite actions or reuse
  # security-events: write     # for uploading SARIF to GitHub Security tab
  # deployments: write         # if performing GitHub deployments
  # statuses: write            # if setting commit status (e.g., from tests or scans)

on:
  pull_request:
    paths:
      - 'ObsidianWall_SIaC/modules/**'

jobs:
  validate-modules:
    name: Validate Terraform Module Structure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Terraform Module Structure
        run: |
          echo "Checking that all modules have required Terraform files..."

          for module in ObsidianWall_SIaC/modules/*/; do
            echo "üìÅ Scanning module: $module"

            REQUIRED_FILES=("main.tf" "variables.tf" "outputs.tf" "versions.tf")

            for file in "${REQUIRED_FILES[@]}"; do
              if [ ! -f "$module/$file" ]; then
                echo "‚ùå ERROR: Missing $file in $module"
                exit 1
              fi
            done
          done

          echo "‚úÖ All modules passed structure validation."
