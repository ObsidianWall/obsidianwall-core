
# filepath: Obsidian-core/.github/workflows/scripts-ci.yml
# This workflow validates Bash and Python scripts in the ObsidianWall_SIaC/scripts directory.


name: Scripts CI

on:
  push:
    paths:
      - 'ObsidianWall_SIaC/scripts/**'
  pull_request:
    paths:
      - 'ObsidianWall_SIaC/scripts/**'

jobs:
  bash-lint:
    name: Validate Bash Scripts
    runs-on: ubuntu-latest

    # üõ°Ô∏è Permissions: Define what the job can access
    permissions:
      contents: read               # required for actions/checkout
      pull-requests: write         # only if writing comments to PRs
      
      # id-token: write            # uncomment for OIDC auth (e.g., cloud deployments)
      # packages: read             # needed if pulling from GHCR or private packages
      # issues: write              # for workflows that comment on issues
      # actions: read              # for composite actions or reuse
      # security-events: write     # for uploading SARIF to GitHub Security tab
      # deployments: write         # if performing GitHub deployments
      # statuses: write            # if setting commit status (e.g., from tests or scans)

    steps:
      - uses: actions/checkout@v4

      - name: Install shellcheck & shfmt
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          sudo snap install shfmt

      - name: Run shellcheck
        run: find ObsidianWall_SIaC/scripts -name "*.sh" -exec shellcheck {} +

      - name: Run shfmt
        run: find ObsidianWall_SIaC/scripts -name "*.sh" -exec shfmt -d {} +

  python-lint:
    runs-on: ubuntu-latest
    name: Lint Python Scripts
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Bandit & Ruff
        run: |
          pip install bandit ruff

      - name: Run Bandit
        run: bandit -r ObsidianWall_SIaC/scripts

      - name: Run Ruff (Python linter)
        run: ruff check ObsidianWall_SIaC/scripts
