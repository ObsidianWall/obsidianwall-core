
# File: obsidianwall-core/.github/workflows/module-ci-template.yml
# This workflow is a reusable module CI template for validating and securing Terraform modules.
# It includes steps for Terraform initialization, formatting, validation, linting with TFLint, and security checks.
# # Purpose: Local module build-time security validation (tfsec + Checkov + tfint).



name: Reusable Module CI Template

# üõ°Ô∏è Permissions: Define what the job can access
permissions:
  contents: read               # required for actions/checkout
  pull-requests: write         # only if writing comments to PRs
  # id-token: write            # uncomment for OIDC auth (e.g., cloud deployments)
  # packages: read             # needed if pulling from GHCR or private packages
  # issues: write              # for workflows that comment on issues
  # actions: read              # for composite actions or reuse
  # security-events: write     # for uploading SARIF to GitHub Security tab
  # deployments: write         # if performing GitHub deployments
  # statuses: write            # if setting commit status (e.g., from tests or scans)

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string

jobs:
  module-ci:
    name: Validate & Secure Module 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TFSEC_GITHUB_TOKEN: ${{ secrets.TFSEC_GITHUB_TOKEN }}
      CHECKOV_GITHUB_TOKEN: ${{ secrets.CHECKOV_GITHUB_TOKEN }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@4 # Using a specific commit for stability
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@4 # Using a specific commit for stability
        with:
          tflint_version: latest

      - name: Run TFLint
        run: |
          tflint --init
          tflint --format=compact

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@4                   # Using a specific commit for stability
        with:
          working_directory: ${{ inputs.working-directory }} 

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@4               # Using a specific commit for stability
        with:
          directory: ${{ inputs.working-directory }}
