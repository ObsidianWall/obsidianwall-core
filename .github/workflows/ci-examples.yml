
# File: obsidianwall-core/.github/workflows/ci-examples.yml

# Description: This GitHub Actions workflow runs Terraform plan on example deployments
# üß™ CI: Run Terraform plan on example deployments
# Simulates real-world usage of modules via examples/
# Ensures examples remain deployable and error-free






name: CI-Terraform Example Plan

# üõ°Ô∏è Permissions: Define what the job can access
permissions:
  contents: read               # required for actions/checkout
  pull-requests: write         # only if writing comments to PRs
  # id-token: write            # uncomment for OIDC auth (e.g., cloud deployments)
  # packages: read             # needed if pulling from GHCR or private packages
  # issues: write              # for workflows that comment on issues
  # actions: read              # for composite actions or reuse
  # security-events: write     # for uploading SARIF to GitHub Security tab
  # deployments: write         # if performing GitHub deployments
  # statuses: write            # if setting commit status (e.g., from tests or scans)

on:
  pull_request:
    paths:
      - 'ObsidianWall_SIaC/examples/**'
  push:
    branches: [main]
    paths:
      - 'ObsidianWall_SIaC/examples/**'

jobs:
  example-plan:
    runs-on: ubuntu-latest


    strategy:
      matrix:
        example:
          - ObsidianWall_SIaC/examples/example-basic-vm
          - ObsidianWall_SIaC/examples/example-ndr-deployment

    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.example }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@c65cd883420fd2eb864698a825fc4162dd94482c #(v1), #44, usinng commit SHA for stability

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false
